% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ECTermScoring.R
\name{terms_ecranks_statistics}
\alias{terms_ecranks_statistics}
\alias{terms_ecranks_statistics,ECTermScoring-method}
\title{Score Terms Against a Ranked List of Elements}
\usage{
terms_ecranks_statistics(object, element_ranks, terms = NULL)

\S4method{terms_ecranks_statistics}{ECTermScoring}(object, element_ranks, terms = NULL)
}
\arguments{
\item{object}{An ECTermScoring object.}

\item{element_ranks}{A named list or vector where names are element IDs and values
are their numeric ranks (1 being the highest rank).}

\item{terms}{A character vector of term IDs to score. If NULL (default),
all terms in the object are processed.}
}
\value{
A named list where each name is a term ID. Each element of the list is a
  data frame containing the running enrichment statistics for that term.
}
\description{
Calculates a running enrichment score for terms based on a ranked list of elements.
}
\details{
This method implements a fast algorithm for ranked list analysis, similar in
principle to GSEA. For each term, it calculates a profile of statistics (z-score, p-value, etc.)
at each rank position occupied by an element from that term. The time complexity is
approximately O(N + sum_k k*log(k)), where N is the total number of ranked elements and k is the
size of a term, as it uses an efficient cumulative sum approach for lambda calculation.
}
\section{Methods (by class)}{
\itemize{
\item \code{terms_ecranks_statistics(ECTermScoring)}: Method for ECTermScoring objects.

}}
\examples{
# Create a sample ECTermScoring object
te_df <- data.frame(
  term = c("TermA", "TermA", "TermB"),
  element = c("Elem1", "Elem3", "Elem2")
)
ects <- ECTermScoring(te_df)

# Create a sample ranked list
ranks <- c(Elem1 = 1, Elem2 = 2, Elem3 = 3, Elem4 = 4)

# Get the ranked scoring profile for TermA
ranked_scores <- terms_ecranks_statistics(ects, ranks, terms = "TermA")
print(ranked_scores)

}
